stages:
  # - build
  # - test
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

variables:
  IMAGE_REGISTRY: "asia.gcr.io/k8s-gitlab-ci"

# build:
#   image: docker:stable
#   services:
#     - docker:stable-dind
#   stage: build
#   variables:
#     COMMIT_IMAGE_TAG_CLIENT: $IMAGE_REGISTRY/client:$CI_COMMIT_SHA
#     BRANCH_IMAGE_TAG_CLIENT: $IMAGE_REGISTRY/client:$CI_COMMIT_REF_SLUG
#   before_script:
#     - echo $GCLOUD_SERVICE_KEY | docker login --username _json_key --password-stdin https://asia.gcr.io 
#     - export DOCKER_AUTH_CONFIG=$(cat /root/.docker/config.json)
#   script:
#     - docker build -t $COMMIT_IMAGE_TAG_CLIENT -t $BRANCH_IMAGE_TAG_CLIENT -f ./client/Dockerfile.dev ./client
#     - docker push $COMMIT_IMAGE_TAG_CLIENT
#     - docker push $BRANCH_IMAGE_TAG_CLIENT
#   only:
#     refs:
#       - development
#       - tags
#       - master
#       - qa

# test:
#   image: docker:stable
#   services:
#     - docker:stable-dind
#   stage: test 
#   variables:
#     COMMIT_IMAGE_TAG_CLIENT: $IMAGE_REGISTRY/client:$CI_COMMIT_SHA
#     BRANCH_IMAGE_TAG_CLIENT: $IMAGE_REGISTRY/client:$CI_COMMIT_REF_SLUG
#   before_script:
#     - echo $GCLOUD_SERVICE_KEY | docker login --username _json_key --password-stdin https://asia.gcr.io 
#     - export DOCKER_AUTH_CONFIG=$(cat /root/.docker/config.json)
#   script:
#     - docker run -e CI=true $COMMIT_IMAGE_TAG_CLIENT npm run test
#   only:
#     refs:
#       - development
#       - tags
#       - master
#       - qa

deploy: 
  image: docker:stable
  services:
    - docker:stable-dind
  stage: deploy
  variables:
    DOCKER_DRIVER: overlay
    COMMIT_IMAGE_TAG_CLIENT: $IMAGE_REGISTRY/client:$CI_COMMIT_SHA
    LATEST_IMAGE_TAG_CLIENT: $IMAGE_REGISTRY/client:latest
    COMMIT_IMAGE_TAG_SERVER: $IMAGE_REGISTRY/server:$CI_COMMIT_SHA
    LATEST_IMAGE_TAG_SERVER: $IMAGE_REGISTRY/server:latest
    COMMIT_IMAGE_TAG_WORKER: $IMAGE_REGISTRY/worker:$CI_COMMIT_SHA 
    LATEST_IMAGE_TAG_WORKER: $IMAGE_REGISTRY/worker:latest
  
  before_script:
    - apk update && apk add openssh
    - apk add --update make ca-certificates openssl python
    - update-ca-certificates
    - echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
    - wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
    - tar zxvf google-cloud-sdk.tar.gz && ./google-cloud-sdk/install.sh --usage-reporting=false --path-update=true
    - google-cloud-sdk/bin/gcloud --quiet components update
    - google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    - echo $GCLOUD_SERVICE_KEY | docker login --username _json_key --password-stdin https://asia.gcr.io
    - export DOCKER_AUTH_CONFIG=$(cat /root/.docker/config.json)
    
  # before_script:
  #   - echo $GCLOUD_SERVICE_KEY > /tmp/$CI_PIPELINE_ID.json
  #   - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
  #   - gcloud config set project $GCLOUD_PROJECT_ID
  #   - gcloud config set compute/zone asia-south1-c
  #   - gcloud container clusters get-credentials complex-k8s-cluster
  #   - gcloud auth configure-docker -q
  #   - echo $GCLOUD_SERVICE_KEY | docker login --username _json_key --password-stdin https://asia.gcr.io 
  #   - export DOCKER_AUTH_CONFIG=$(cat /root/.docker/config.json)

  script:
    - ./deploy.sh
  environment:
    name: production
    url: http://34.93.154.22:80
  only:
    refs:
      - master