stages:
  - build
  - test

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

variables:
  IMAGE_REGISTRY: "asia.gcr.io/k8s-gitlab-ci"

build:
  image: docker:stable
  services:
    - docker:stable-dind
  stage: build
  variables:
    BRANCH_IMAGE_TAG: $IMAGE_REGISTRY/web:$CI_COMMIT_REF_SLUG
    COMMIT_IMAGE_TAG: $IMAGE_REGISTRY/web:$CI_COMMIT_SHA
  before_script:
    # - curl https://sdk.cloud.google.com | bash > /dev/null;
    # - source $HOME/google-cloud-sdk/path.bash.inc
    # - gcloud components update kubectl
    # - echo $GCLOUD_SERVICE_KEY > /tmp/$CI_PIPELINE_ID.json
    # - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
    # - gcloud config set project $GCLOUD_PROJECT_ID
    # - gcloud config set compute/zone asia-south1-c
    # - gcloud container clusters get-credentials complex-k8s-cluster
    - echo $GCLOUD_SERVICE_KEY | docker login --username _json_key --password-stdin https://asia.gcr.io 
    - export DOCKER_AUTH_CONFIG=$(cat /root/.docker/config.json)
  script:
    - docker build -t $BRANCH_IMAGE_TAG -t $COMMIT_IMAGE_TAG -f ./client/Dockerfile.dev .
    - docker push $BRANCH_IMAGE_TAG
    - docker push $COMMIT_IMAGE_TAG
  only:
    refs:
      - development
      - tags
      - master
      - qa

test:
  image: docker:stable
  services:
    - docker:stable-dind
  stage: test 
  variables:
    BRANCH_IMAGE_TAG: $IMAGE_REGISTRY/web:$CI_COMMIT_REF_SLUG
    COMMIT_IMAGE_TAG: $IMAGE_REGISTRY/web:$CI_COMMIT_SHA 
  before_script:
    - echo $GCLOUD_SERVICE_KEY | docker login --username _json_key --password-stdin https://asia.gcr.io 
    - export DOCKER_AUTH_CONFIG=$(cat /root/.docker/config.json)
  script:
    - docker run -e CI=true $COMMIT_IMAGE_TAG npm run test
  only:
    refs:
      - development
      - tags
      - master
      - qa